version: "3.1"

services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
      - jenkins
      - backend
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - reverse-proxy

  jenkins:
    image: jenkins/jenkins:lts
    environment:
      - JENKINS_ARGS=--prefix=/jenkins
    volumes:
      - "jenkins_home:/var/jenkins_home"
    networks:
      - reverse-proxy

  mysql:
    image: mysql:8.0.33
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    volumes:
      - ./ict3x03-team7-database/init/01-createTables.sql:/docker-entrypoint-initdb.d/01-createTables.sql
      - mysql-data:/var/lib/mysql
    networks:
      - reverse-proxy

  mysql-seed:
    build: ./ict3x03-team7-database/init/mysql-seed
    depends_on:
      - mysql
    env_file:
      - .env
    volumes:
      - ./ict3x03-team7-database/init/mysql-seed:/mysql-seed
    working_dir: /mysql-seed
    networks:
      - reverse-proxy
    command: sh seed.sh

  redis:
    image: redis:7.2.1
    restart: always
    env_file:
      - .env
    command: >
      --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis-data:/data
    networks:
      - reverse-proxy

  backend:
    build:
      context: ./ict3x03-team7-backend
    depends_on:
      - mysql
      - redis
    env_file: ./ict3x03-team7-backend/.env.production
    networks:
      - reverse-proxy

  frontend:
    build:
      context: ./ict3x03-team7-frontend
    depends_on:
      - backend
    env_file: ./ict3x03-team7-frontend/.env.production
    networks:
      - reverse-proxy

volumes:
  mysql-data:
  redis-data:
  jenkins_home:

networks:
  reverse-proxy:
    driver: bridge
